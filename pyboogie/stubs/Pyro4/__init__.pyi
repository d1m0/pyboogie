from typing import Union, Callable, Type, Any, Optional
from .errors import TimeoutError

def expose(a: Callable) -> Callable:  ...

class URI:  ...

class Daemon(object):
  def __init__(self) -> None: ...
  def register(self, t: Union[Type, object]) -> URI: ...
  def requestLoop(self) -> None:  ...


class Proxy(object):
  _pyroTimeout: Optional[int]
  def __init__(self, uri: URI) -> None: ...
  def __getattr__(self, k: str) -> Any: ...
